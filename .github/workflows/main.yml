name: GHAction example

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  ci_step:
    name: Build, scan, and push Docker image
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Check out the source_repo
        uses: actions/checkout@v4
      
      - name: Docker metadata definitions for DockerHub
        id: meta-dockerhub
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/example
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/example:cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/example:cache
          tags: ${{ steps.meta-dockerhub.outputs.tags }}
      
      - name: Scan image for vulnerabilities
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ steps.meta-dockerhub.outputs.tags }}
          sarif-file: sarif.output.json
          summary: true

      - name: Check for critical and high vulnerabilities
        run: |
          critical=$(jq '.runs[].results | map(select(.level == "error")) | length' sarif.output.json)
          high=$(jq '.runs[].results | map(select(.level == "warning")) | length' sarif.output.json)
          if [ "$critical" -ne 0 ] || [ "$high" -ne 0 ]; then
            echo "Found critical or high threats"
            exit 1
          fi
      
      - name: Login to GitHub Container Registry if no critical or high vulnerabilities found
        if: success()
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the image to GHCR
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-dockerhub.outputs.tags }}
